{"ast":null,"code":"var _jsxFileName = \"/home/serafim/Documentos/trybe/trybe-exercises/bloco_12/componentes-com-estado-eventos-e-formularios-com-react_2/my-form-2.0/src/App.js\";\nimport Form from './Form';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n/*\n  *Criando um formulário em React.*\n  \n  Lembra do formulário que você criou usando JavaScript \"clássico\"? Vamos criar um parecido em React, e você verá como suas habilidades evoluíram desde então!\n  \n  Crie um novo projeto, utilizando npx create-react-app my-form-2.0\n  \n  Caso julgue necessário, crie estilos CSS para seu formulário, de acordo com a sua imaginação.\n  \n  Faça tudo utilizando as abstrações do React .\n  Vamos criar um formulário de cadastro de currículo com base na especificação seguintes:\n  \n  1. Crie um <fieldset> para os dados pessoais a seguir:\n  - Nome - Texto\n    Limite de 40 caracteres\n    Todos os caracteres devem ser transformados para UPPER CASE assim que forem digitados.\n    Campo obrigatório\n  \n    - Email - Texto\n    Limite de 50 caracteres\n    Campo obrigatório\n  \n  - CPF - Texto\n    Limite de 11 caracteres\n    Campo obrigatório\n    \n  -  Endereço - Texto\n    Limite de 200 caracteres\n    Remover qualquer caracter especial que seja digitado\n    Campo obrigatório\n  \n  - Cidade - Texto\n    Limite de 28 caracteres\n    Ao remover o foco desse campo (evento onBlur ), verificar se o nome da cidade começa com números. Caso comece, limpar o campo.\n    Campo obrigatório.\n\n  - Estado - ComboBox\n    Todos os estados do Brasil\n    Campo obrigatório.\n  \n  - Tipo - Radio Button\n  Casa, Apartamento\n  Campo obrigatório.\n  Crie outro <fieldset> para dados do seu último emprego:\n  Resumo do currículo - TextArea\n  Limite de 1000 caracteres\n  Campo obrigatório.\n  Cargo - TextArea\n  Limite de 40 caracteres\n  Quando o mouse passar por cima deste campo (evento onMouseEnter ), exibir um alerta dizendo 'Preencha com cuidado esta informação.'. Exiba essa mensagem apenas uma vez.\n  Campo obrigatório\n  Descrição do cargo - Texto\n  Limite de 500 caracteres\n  Campo obrigatório\n  Crie um botão que, ao ser clicado, monta uma <div> com o consolidado dos dados que foram inseridos no formulário.\n  Crie um botão Limpar que limpa todos os campos do formulário e a <div> com seu currículo também.\n  Por último, vá até o formulário que você criou na aula HTML & CSS - Forms e veja as diferenças no código.\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/serafim/Documentos/trybe/trybe-exercises/bloco_12/componentes-com-estado-eventos-e-formularios-com-react_2/my-form-2.0/src/App.js"],"names":["Form","App"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAJQA,G;AAMT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Form from './Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Form />\n  );\n}\n\nexport default App;\n\n/*\n  *Criando um formulário em React.*\n  \n  Lembra do formulário que você criou usando JavaScript \"clássico\"? Vamos criar um parecido em React, e você verá como suas habilidades evoluíram desde então!\n  \n  Crie um novo projeto, utilizando npx create-react-app my-form-2.0\n  \n  Caso julgue necessário, crie estilos CSS para seu formulário, de acordo com a sua imaginação.\n  \n  Faça tudo utilizando as abstrações do React .\n  Vamos criar um formulário de cadastro de currículo com base na especificação seguintes:\n  \n  1. Crie um <fieldset> para os dados pessoais a seguir:\n  - Nome - Texto\n    Limite de 40 caracteres\n    Todos os caracteres devem ser transformados para UPPER CASE assim que forem digitados.\n    Campo obrigatório\n  \n    - Email - Texto\n    Limite de 50 caracteres\n    Campo obrigatório\n  \n  - CPF - Texto\n    Limite de 11 caracteres\n    Campo obrigatório\n    \n  -  Endereço - Texto\n    Limite de 200 caracteres\n    Remover qualquer caracter especial que seja digitado\n    Campo obrigatório\n  \n  - Cidade - Texto\n    Limite de 28 caracteres\n    Ao remover o foco desse campo (evento onBlur ), verificar se o nome da cidade começa com números. Caso comece, limpar o campo.\n    Campo obrigatório.\n\n  - Estado - ComboBox\n    Todos os estados do Brasil\n    Campo obrigatório.\n  \n  - Tipo - Radio Button\n  Casa, Apartamento\n  Campo obrigatório.\n  Crie outro <fieldset> para dados do seu último emprego:\n  Resumo do currículo - TextArea\n  Limite de 1000 caracteres\n  Campo obrigatório.\n  Cargo - TextArea\n  Limite de 40 caracteres\n  Quando o mouse passar por cima deste campo (evento onMouseEnter ), exibir um alerta dizendo 'Preencha com cuidado esta informação.'. Exiba essa mensagem apenas uma vez.\n  Campo obrigatório\n  Descrição do cargo - Texto\n  Limite de 500 caracteres\n  Campo obrigatório\n  Crie um botão que, ao ser clicado, monta uma <div> com o consolidado dos dados que foram inseridos no formulário.\n  Crie um botão Limpar que limpa todos os campos do formulário e a <div> com seu currículo também.\n  Por último, vá até o formulário que você criou na aula HTML & CSS - Forms e veja as diferenças no código.\n*/\n"]},"metadata":{},"sourceType":"module"}