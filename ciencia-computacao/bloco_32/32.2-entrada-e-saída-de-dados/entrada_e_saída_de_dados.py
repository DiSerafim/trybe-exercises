# ########################################## Entrada e Sa√≠da de Dados
# --> CONTE√öDO do dia - 32.2 - <--- / INICIO ----------------------------- //
# ########################################## Entrada e Sa√≠da de Dados

# ---> FOCO <---
...
# - Estruturando uma aplica√ß√£o
# - Entrada e Sa√≠da
# - Manipula√ß√£o de arquivos
# - Lidando com exce√ß√µes
# - Manipulando arquivos JSON
# - Manipulando arquivos CSV
# - Fixando os aprendizados


# ---> OBJETIVO <---
...
# - Preparar um ambiente de projeto em Python, definindo sua estrutura de_
# diret√≥rios e criando ambientes isolados;
# - Instalar bibliotecas de terceiros num projeto Python;
# - Entender como lidar com exce√ß√µes em Python;
# - Receber dados de pessoas usu√°rias, assim como envi√°-los de volta;
# - Ler e escrever arquivos no formato tabular CSV ;
# - Serializar e dessearalizar dados no formato JSON .


# ---> CONTE√öDO <---
...
# -> Estruturando uma aplica√ß√£o

# M√≥dulos
# - √â todo arquivo escrito com a linguagem Python e com a extens√£o .py

# ex:
# my_math.py

...
# Pacotes
# - s√£o m√≥dulos que cont√™m outros m√≥dulos e/ou pacotes

# ex:
# importa o pacote http como um m√≥dulo
# import http

# importa o m√≥dulo client do pacote http
# from http import client

# # importa a constante HTTP_POST do m√≥dulo client do pacote http
# from http.client import HTTP_PORT

...
# Ambiente Virtual
# - √© instalar as bibliotecas em um diret√≥rio, que est√° relacionado ao projeto.
# Assim, cada projeto pode ter suas pr√≥prias bibliotecas na sua vers√£o

# python3 -m venv .venv , sendo que .venv √© o nome do ambiente isolado.
# -> python3 -m venv .venv

# Depois de criado, temos de ativar este ambiente para us√°-lo.
# -> source .venv/bin/activate

# conferir se o comando de ativa√ß√£o do ambiente virtual deu certo
# ->  which python3
# O resultado ser√° o caminho para a pasta onde voc√™ criou seu ambiente virtual
# ( pwd ), acrescido de .venv/bin/python3.

...
# >-> Entrada e Sa√≠da
...
# ‚îî‚îÄ# mkdir python-io && cd python-io
# ‚îî‚îÄ# which python
# /usr/bin/python

...
# criar um ambiente virtual
# ‚îî‚îÄ# python3 -m venv .venv
...
# inicializa
# ‚îî‚îÄ# source .venv/bin/activate
...
# agora estamos em um ambiente privado
# ‚îî‚îÄ# which python
# /home/serafim/Documentos/trybe/trybe-exercises/ciencia-computacao/bloco_32/32.2-entrada-e-sa√≠da-de-dados/python-io/.venv/bin/python

# Entrada
...
# python-io/soma_de_numeros.py
...
# python-io/entrada_random.py -> - Gerar n√∫meros pseudo-aleat√≥rios
...
# python-io/entrada_com_sys.py

# Sa√≠da
...
print("O resultado √©", 42)  # O resultado √© 42
print("Os resultados s√£o", 6, 23, 42)  # Os resultados s√£o 6 23 42

...
# alterar o "separador" dos argumentos passados, que, √© um espa√ßo em branco.
print("Maria", "Jo√£o", "Miguel", "Ana")  # Maria Jo√£o Miguel Ana
print("Maria", "Jo√£o", "Miguel", "Ana", sep=", ")  # Maria, Jo√£o, Miguel, Ana

...
# alterar o caractere de "fim" de linha que, por regra, √© uma quebra de linha:
print("Na mesma ", end="")
print("linha.")  # Na mesma linha.

...
# modificar a sa√≠da padr√£o para a sa√≠da de erros:
# python-io/modificar_saida.py

...
# interpola√ß√£o de vari√°veis e express√µes utilizando f-string
# python-io/interpolacao.py

# Exerc√≠cios
...
# Exerc√≠cio 1: Fa√ßa um programa que solicite o nome de uma pessoa usu√°ria e
# imprima-o na vertical. Ex:
# F
# U
# L
# A
# N
# O

# ./imprime_na_vertical.py

...
# Exerc√≠cio 2: Escreva um programa que receba v√°rios n√∫meros naturais e calcule
# a soma desses valores. Caso algum valor da entrada seja inv√°lido, por exemplo
# uma letra, uma mensagem deve ser exibida, na sa√≠da de erros, no seguinte
# formato: "Erro ao somar valores, {valor} √© um valor inv√°lido". Ao final, voc√™
# deve imprimir a soma dos valores v√°lidos.
# ü¶ú Receba os valores em um mesmo input , solicitando √† pessoa usu√°ria que
# separe-os com um espa√ßo. Receba os valores no formato str e utilize o m√©todo
# split para pegar cada valor separado. O m√©todo isdigit , embutido no tipo str
# pode ser utilizado para verificar se a string corresponde a um n√∫mero natural

# ./soma_numeros_naturais.py

...
# >-> Manipula√ß√£o de arquivos
...
# cria um arquivo e insere dados nele
# ./manipulando_arquivo.py

...
# ao abrir um arquivo para escrita, um novo arquivo √© criado mesmo que ele j√°
# exista, sobrescrevendo o antigo.
file = open("arquivo.txt", mode="w")

# Para escrevermos um conte√∫do em um arquivo utilizamos a fun√ß√£o write :
file.write("nome idade\n")
file.write("Maria 45\n")
file.write("Miguel 33\n")

# podemos redirecionar o conte√∫do digitado dentro de print para um arquivo.
print("T√∫lio 22", file=file)

# Para escrever m√∫ltiplas linhas podemos utilizar a fun√ß√£o writelines
LINES = ["Alberto 35\n", "Betina 22\n", "Jo√£o 42\n", "Victor 19\n"]
file.writelines(LINES)

# Abrimos o arquivo, escrevemos seu conte√∫do, vamos ent√£o fech√°-lo:
file.close()

...
# ocorr√™ncia de um erro ao abrir muitos arquivos ao mesmo tempo:
arquivos = []
for index in range(10240):
    arquivos.append(open(f"arquivo{index}.txt", "w"))

...
# vamos escrever em um arquivo e l√™-lo logo em seguida!

# escrita
file = open("lendo_arquivo.txt", mode="w")
file.write("Trybe <3")
file.write

# leitura
file = open("lendo_arquivo.txt", mode="r")
content = file.read()
print(content)
file.close()  # Trybe <3

# Um arquivo √© tamb√©m um iter√°vel, ou seja, pode ser percorrido em um la√ßo de
# repeti√ß√£o. A cada itera√ß√£o, uma nova linha √© retornada.
...
# ./criar_arquvo_loop.py

# arquivos bin√°rios. Eles s√£o arquivos que cont√™m uma s√©rie de bytes e a sua
# leitura pode variar de acordo com o arquivo. Nesse caso, devemos acrescentar
# um b ao par√¢metro mode
...
# ./criando_binario.py

...
# >-> Lidando com exce√ß√µes
...
# Erros de Sintaxe

# √â como executar:
# print{"Ol√°, mundo!"}
# em vez de..
print("Ol√°, mundo!")

...
# Exce√ß√µes
# -ocorrem durante a execu√ß√£o e acabam resultando em mensagem de erro.

print(10 * (1 / 0))  # ZeroDivisionError: division by zero

print(4 + 'spam' * 3)  # NameError: name 'spam' is not defined

print('2' + 2)  # TypeError: can only concatenate str (not "int") to str

...
# Tratamento de exce√ß√µes
# - com as palavras reservadas (try e except)

# ./tratando_excecoes.py

...
# Lidando com exce√ß√µes enquanto manipulamos arquivos
# - utilizando a instru√ß√£o (finally ou else)
...
# finally
# - Implementa√ß√£o de a√ß√µes de limpeza, independente da ocorr√™ncia de a√ß√µes.

...
# else
# - Ocorre sempre que todo o try for bem sucedido.

...
# ./finally_ou_else.py

...
# open with

# criamos um cotexto, limitando o escopo onde o arquivo est√° aberto
# "as" √© somente para atribuir o valor utilizado no contexto √† vari√°vel file
with open("with_open.txt", "w") as file:
    file.write("Michelle 27\n")
# como etamos fora do contexto, o arquivo foi fechado
print(file.closed)  # True

...
# Exerc√≠cio 3: Dado um arquivo contendo estudantes e suas respectivas notas,
# escreva um programa que l√™ todas essas informa√ß√µes e filtre mantendo somente
# as pessoas que est√£o reprovadas, e escreva seus nomes em outro arquivo. A
# nota min√≠ma para aprova√ß√£o √© 6.

# Arquivo:
# Marcos 10 | Felipe 4 | Jos√© 6 | Ana 10 | Maria 9 | Miguel 5
# Exemplo sa√≠da:
# Felipe | Miguel

# ü¶ú A fun√ß√£o split pode ser utilizada para dividir o nome em uma linha.
# Ex: line.split -> ["Marcos", "10"]
...
# ./alunos_reprovados.py

...
# >-> Manipulando arquivos JSON
...
# JSON - √© um formato textual utilizado para integra√ß√£o de sistemas.
# √© baseado em um subconjunto de regras JavaScript

# ex:
# back-end e front-end,
# comunica√ß√£o com sistemas externos, exemplo "gateways de pagamento",
# ou internos como "sistema de autentica√ß√£o".

# ./super_heroes.py
# ./superheroes.json

# ./pokemons.json
# ./pokemons.py

# ./frentes.json
# ./frentes.py

...
# >-> Manipulando arquivos CSV
...
# - ( Comma Separated Values ) √© muito comum em exporta√ß√µes de planilhas de
# dados e base de dados.

# ./balneabilidade.csv
# ./balneabilidade.py

# ./escritor_em_dict.py

...
# >-> Fixando os aprendizados
...

# --------------------------------------------------------------------------- #
# - > CONTE√öDO do dia - 32.2 - <--- / FIM ---------------------------------- //
# #####################################
# - > AULA ao VIVO - 32.2 ----- <--- / INICIO ------------------------------ //
# --------------------------------------------------------------------------- #

# Foco de hoje
#
# --------------------------------------------------------------------------- #
# - > AULA ao VIVO - 32.2 ----- <--- / FIM --------------------------------- //
# #####################################
# - > EXERC√çCIO do dia - 32.2 - <--- / INICIO ------------------------------ //
# --------------------------------------------------------------------------- #

# Agora a pr√°tica

# --------------------------------------------------------------------------- #
# - > EXERC√çCIO do dia - 32.2 - <--- / FIM --------------------------------- //
# ########################################## Entrada e Sa√≠da de Dados
# - Conclu√≠do /¬∞\------------------------------------------------------------ #
